import { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { getEmployeeDataById, updateEmployeeData } from "@/api/employeeAPI";

function UpdateEmployee() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    name: "",
    address_line_1: "",
    city: "",
    country: "",
    zip_code: "",
    email: "",
    phone_number: "",
  });
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const loadEmployee = async () => {
      try {
        const employee = await getEmployeeDataById(id);
        setFormData({
          name: employee.name,
          address_line_1: employee.address_line_1,
          city: employee.city,
          country: employee.country,
          zip_code: employee.zip_code,
          email: employee.email,
          phone_number: employee.phone_number,
        });
      } catch (err) {
        setError("Error fetching employee details");
      } finally {
        setIsLoading(false);
      }
    };

    loadEmployee();
  }, [id]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      // const employeeData = {
      //   id: id,
      //   name: formData.name,
      //   address_line_1: formData.address_line_1,
      //   city: formData.city,
      //   country: formData.country,
      //   zip_code: formData.zip_code,
      //   email: formData.email,
      //   phone_number: formData.phone_number,
      // };
      await updateEmployeeData(id, formData);
      navigate(`/employee/${id}`);
    } catch (err) {
      setError("Error updating employee");
    }
  };

  if (isLoading) return <div>Loading...</div>;
  if (error) return <div>{error}</div>;

  return (
    <Card>
      <CardHeader>
        <CardTitle>Update Employee</CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <Label htmlFor="name">Name</Label>
            <Input
              id="name"
              name="name"
              value={formData.name}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="address_line_1">Address Line 1</Label>
            <Input
              id="address_line_1"
              name="address_line_1"
              value={formData.address_line_1}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="city">City</Label>
            <Input
              id="city"
              name="city"
              value={formData.city}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="country">Country</Label>
            <Input
              id="country"
              name="country"
              value={formData.country}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="zip_code">Zip Code</Label>
            <Input
              id="zip_code"
              name="zip_code"
              value={formData.zip_code}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              name="email"
              type="email"
              value={formData.email}
              onChange={handleChange}
              required
            />
          </div>
          <div>
            <Label htmlFor="phone_number">Phone Number</Label>
            <Input
              id="phone_number"
              name="phone_number"
              value={formData.phone_number}
              onChange={handleChange}
              required
            />
          </div>
          <Button type="submit">Update Employee</Button>
        </form>
      </CardContent>
    </Card>
  );
}

export default UpdateEmployee;
